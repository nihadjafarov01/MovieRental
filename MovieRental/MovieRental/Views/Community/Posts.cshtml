@using MovieRental.Business.ViewModels.PostVMs
@model IEnumerable<PostListItemVM>

<div class="iq-breadcrumb" style="background-image: url('@Url.Content("~/assets/images/pages/01.webp")');">
            <div class="container-fluid">
                <div class="row align-items-center">
                    <div class="col-sm-12">
                        <nav aria-label="breadcrumb" class="text-center">
                            <h2 class="title">FAQ</h2>
                            <ol class="breadcrumb justify-content-center">
                                <li class="breadcrumb-item"><a href="./index.html">Home</a></li>
                                <li class="breadcrumb-item active">FAQ</li>
                            </ol>
                        </nav>
                    </div>
                </div>
            </div>
        </div>
        <!--bread-crumb-->


        <div class="section-padding">
            <div class="container">
                <div class="iq-accordian iq-accordian-square">
            @foreach(var item in Model)
            {
                <div id="comments" class="comments-area validate-form form-control">
                    <div class="slider-ratting d-flex align-items-center ms-lg-3 ms-0">
                        <ul class="ratting-start p-0 m-0 list-inline text-warning d-flex align-items-center justify-content-left">
                            <li>
                                <p class="my-2">#@item.Tag.Title</p>
                            </li>
                        </ul>
                        <span class="text-white ms-2 time-ago">@item.CreatedTime.AddHours(4).ToString("yyyy-MM-ddTHH:mm:ss")</span>
                    </div>
                    <a asp-action="Post" asp-route-postId="@item.Id" class="text-white fw-500 my-2">
                        @item.Title
                    </a>
                    <p class="my-2">@item.Description</p>
                    <div class="slider-ratting d-flex align-items-center ms-lg-3 ms-0">
                        <a class="nav-link d-flex align-items-center" href="#" id="navbarDropdown" role="button"
                           data-bs-toggle="dropdown" aria-expanded="false">
                            <div style="width: 35px; height: 35px; overflow: hidden; border-radius: 50%;">
                                @if (item.User.ProfileImageUrl == null)
                                {
                                    <img src="~/assets/images/blankProfilePhoto.png" class="icon-18" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" alt="Profile Image" />
                                }
                                else
                                {
                                    <img src="@item.User.ProfileImageUrl" class="icon-18" style="width: 100%; height: 100%; object-fit: cover; border-radius: 50%;" alt="Profile Image" />
                                }
                            </div>
                        </a>
                        <a asp-action="Profile" asp-controller="User" asp-route-username="@item.User.UserName" class="ms-1">@item.User.UserName</a>
                                <i class="fas fa-comment ms-5">

                                </i>
                                <a asp-action="Post" asp-route-postId="@item.Id" class="ms-1">
                                    @item.Comments.Count()
                                </a>
                    </div>

                </div>
            }

                </div>
            </div>
        </div>

</main>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var timeAgoElements = document.querySelectorAll('.time-ago');
        timeAgoElements.forEach(function (element) {
            element.textContent = timeAgo(element.textContent);
        });
    });
    function timeAgo(dateString) {
        const date = new Date(dateString);
        const seconds = Math.floor((new Date() - date) / 1000);

        const interval = Math.floor(seconds / 31536000);

        if (interval > 1) {
            return interval + " years ago";
        }
        if (interval === 1) {
            return interval + " year ago";
        }

        const months = Math.floor(seconds / 2628000);
        if (months > 1) {
            return months + " months ago";
        }
        if (months === 1) {
            return months + " month ago";
        }

        const days = Math.floor(seconds / 86400);
        if (days > 1) {
            return days + " days ago";
        }
        if (days === 1) {
            return days + " day ago";
        }

        const hours = Math.floor(seconds / 3600);
        if (hours > 1) {
            return hours + " hours ago";
        }
        if (hours === 1) {
            return hours + " hour ago";
        }

        const minutes = Math.floor(seconds / 60);
        if (minutes > 1) {
            return minutes + " minutes ago";
        }
        if (minutes === 1) {
            return minutes + " minute ago";
        }

        return "just now";
    }

</script>
